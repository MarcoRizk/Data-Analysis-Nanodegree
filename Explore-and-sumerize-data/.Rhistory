geom_line(stat = 'summary',fun.y= quantile, probs=.1)
qplot(x=age, y=friend_count, data=pf) + xlim(13,89)+geom_point(alpha = 0.05,position = position_jitter(h=0),color='orange') +
coord_trans(y='sqrt')+
geom_line(stat='summary',fun.y= mean)+
geom_line(stat = 'summary',fun.y= quantile, probs=.1, linetype =2, color = 'blue')
cor.test(pf$age,pf$friend_count,method = 'pearson')
with(subset(pf, pf$age <=70)                 , cor.test(age, friend_count))
qplot(x= www_likes_received,y=likes_received,data=pf)
qplot(x= www_likes_received,y=likes_received,data=pf)+xlim(0,quantile(pf$www_likes_received,0.95))
qplot(x= www_likes_received,y=likes_received,data=pf)+xlim(0,quantile(pf$www_likes_received,0.95)) +
ylim(0,quantile(pf$likes_received,0.95))
qplot(x= www_likes_received,y=likes_received,data=pf)+xlim(0,quantile(pf$www_likes_received,0.95)) +
ylim(0,quantile(pf$likes_received,0.95)) +
geom_smooth(method = 'lm',color='red')
cor.test(pf$www_likes_received,pf$likes_received)
install.packages('alr3',dependencies = True)
library(alr3)
install.packages('alr3',dependencies = TRUE)
library(alr3)
install.packages('alr3', dependencies = T)
library(alr3)
data("Mitchell")
?Mitchell
qplot(x=Month , y=Temp , data=Mitchell)
ggplot(data=Mitchell,aes(x=Month,y=Temp))
ggplot(data=Mitchell,aes(x=Month,y=Temp))+geom_point()
ggplot(data=Mitchell,aes(x=Month,y=Temp))+geom_point()
cor.test(Mitchell$Month,Mitchell$Temp)
ggplot(data=Mitchell,aes(x=Month,y=Temp))+
geom_point()+
scale_x_discrete(breaks=(0,203), step=12)
ggplot(data=Mitchell,aes(x=Month,y=Temp))+
geom_point()+
scale_x_discrete(breaks=c(0,203), step=12)
ggplot(data=Mitchell,aes(x=Month,y=Temp))+
geom_point()+
scale_x_discrete(breaks=seq(0,203,12))
cor.test(Mitchell$Month,Mitchell$Temp)
#create age with month variable
pf$age_with_months <- pf$age + (1 - pf$dob_month / 12)
#create age with month variable
pf$age_with_months <- pf$age + (1 - pf$dob_month / 12)
pf.fc_by_age_month <- pf %%
group_by(age_with_months)%%
summarize(friend_count_mean=mean(friend_count),
friend_count_median=median(friend_count),
n=n())%%
arrange(age_with_months)
#create age with month variable
pf$age_with_months <- pf$age + (1 - pf$dob_month / 12)
pf.fc_by_age_month <- pf %%
group_by(age_with_months)%%
summarize(friend_count_mean=mean(friend_count),
friend_count_median=median(friend_count),
n=n())%%
arrange(age_with_months)
#create age with month variable
pf$age_with_months <- pf$age + (1 - pf$dob_month / 12)
pf.fc_by_age_month <- pf %%
group_by(age_with_months)%%
summarize(friend_count_mean=mean(friend_count),
friend_count_median=median(friend_count),
n=n())%%
arrange(age_with_months)
#create age with month variable
pf$age_with_months <- pf$age + (1 - pf$dob_month / 12)
pf.fc_by_age_month <- pf %.%
group_by(age_with_months)%.%
summarize(friend_count_mean=mean(friend_count),
friend_count_median=median(friend_count),
n=n())%.%
arrange(age_with_months)
pf.fc_by_age_month <- pf %.%
group_by(age_with_months)%.%
summarize(friend_count_mean=mean(friend_count),
friend_count_median=median(friend_count),
n=n())%.%
arrange(age_with_months)
library(magrittr)
pf.fc_by_age_month <- pf %.%
group_by(age_with_months)%.%
summarize(friend_count_mean=mean(friend_count),
friend_count_median=median(friend_count),
n=n())%.%
arrange(age_with_months)
library(magrittr)
pf.fc_by_age_month <- pf %.%
group_by(age_with_months)%.%
summarize(friend_count_mean=mean(friend_count),
friend_count_median=median(friend_count),
n=n())%.%
arrange(age_with_months)
library(magrittr)
pf.fc_by_age_month <- pf %>%
group_by(age_with_months)%>%
summarize(friend_count_mean=mean(friend_count),
friend_count_median=median(friend_count),
n=n())%>%
arrange(age_with_months)
setwd('C:/Users/Howard Ryan/Desktop/Nanodegree/Lesson3')
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv',sep = '\t')
qplot(x=age, y=friend_count, data=pf, alpha = 1/20)
setwd('C:/Users/Howard Ryan/Desktop/Nanodegree/Lesson3')
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv',sep = '\t')
qplot(x=age, y=friend_count, data=pf, alpha = 1/20)
qplot(x=age, y=friend_count, data=pf, alpha = 1/20) + coord_trans(y='sqrt')
library(dplyr)
age_groups <- group_by(pf,age)
pf.fc_by_age <- summarise(age_groups,friend_count_mean = mean(friend_count),friend_count_median = median(friend_count), n=n())
pf.fc_by_age <- arrange(pf.fc_by_age,age)
head(pf.fc_by_age)
qplot(x=age,y=friend_count_mean,data=pf.fc_by_age)
qplot(x=age, y=friend_count, data=pf) + xlim(13,89)+geom_point(alpha = 0.05,position = position_jitter(h=0),color='orange') +
coord_trans(y='sqrt')+
geom_line(stat='summary',fun.y= mean)+
geom_line(stat = 'summary',fun.y= quantile, probs=.1, linetype =2, color = 'blue')
cor.test(pf$age,pf$friend_count,method = 'pearson')
with(subset(pf, pf$age <=70)                 , cor.test(age, friend_count))
qplot(x= www_likes_received,y=likes_received,data=pf)+xlim(0,quantile(pf$www_likes_received,0.95)) +
ylim(0,quantile(pf$likes_received,0.95)) +
geom_smooth(method = 'lm',color='red')
#lm is linear model
cor.test(pf$www_likes_received,pf$likes_received)
#create age with month variable
pf$age_with_months <- pf$age + (1 - pf$dob_month / 12)
library(magrittr)
pf.fc_by_age_month <- pf %>%
group_by(age_with_months)%>%
summarize(friend_count_mean=mean(friend_count),
friend_count_median=median(friend_count),
n=n())%>%
arrange(age_with_months)
head(pf.fc_by_age_month)
ggplot(aes(x=age_with_months,y=friend_count_mean),data=subset(pf.fc_by_age_month, age_with_months<71 )) +geom_line()
setwd('C:/Users/Howard Ryan/Desktop/Nanodegree/Lesson6')
diamond <- read.csv('diamondsbig.csv')
head(diamond)
library(ggplot2)
ggplot(aes(x=x, y=price), data=diamond) +
geom_point()
#Correlation testing
cor.test(diamond$x,diamond$price)
cor.test(diamond$y,diamond$price)
cor.test(diamond$z,diamond$price)
View(diamond)
View(diamond)
ggplot(aes(x=depth, y=price), data=diamond) +
geom_point()
ggplot(aes(x=depth, y=price), data=diamond) +
geom_point() + alpha(1/100)
ggplot(aes(x=depth, y=price), data=diamond) +
geom_point(alpha(1/100))
ggplot(aes(x=depth, y=price), data=diamond) +
geom_point(alpha(1/100))
ggplot(aes(x=depth, y=price), data=diamond) +
geom_point(aes(alpha(1/100)))
ggplot(aes(x=depth, y=price), data=diamond) +
geom_point(alpha=1/100)
summary(diamond$depth)
ggplot(aes(x=depth, y=price), data=diamond) +
geom_point(alpha=1/100) +
scale_x_continuous(breaks=seq(0,82,2))
summary(diamond$depth)
cor.test(diamond$depth,diamond$price)
ggplot(aes(x=carat, y=price), data=diamond) +
scale_x_continuous(limits = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(limits = c(0, quantile(diamonds$price, 0.99))) +
ggplot(aes(x=carat, y=price), data=diamond) +
scale_x_continuous(limits = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(limits = c(0, quantile(diamonds$price, 0.99)))
ggplot(aes(x=carat, y=price), data=diamond) +
scale_x_continuous(limits = c(0, quantile(diamond$carat, 0.99))) +
scale_y_continuous(limits = c(0, quantile(diamond$price, 0.99)))
library(ggplot2)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot()+
stat_summary(fun.y=mean,geom = 'point',shape =4)
ggplot(aes(x=age,y=friend_count),data= subset(pf, !is.na(gender)))+
geom_line(aes(color=gender),stat='summary', fun.y=median)
#diving data and creating summaries in a new dataframe
library(dplyr)
pf.fc_by_age_gender <- pf%>%
filter(!is.na(gender))%>%
group_by(age, gender) %>%
summarise(mean_friend_count=mean(friend_count),median_friend_count = median(friend_count),
n=n())%>%
ungroup()%>%
arrange(age)
head(pf.fc_by_age_gender)
#diving data and creating summaries in a new dataframe
library(dplyr)
pf.fc_by_age_gender <- pf%>%
filter(!is.na(gender))%>%
group_by(age, gender) %>%
summarise(mean_friend_count=mean(friend_count),median_friend_count = median(friend_count),
n=n())%>%
ungroup()%>%
arrange(age)
head(pf.fc_by_age_gender)
ggplot(aes(x=age,y=friend_count), data=pf.fc_by_age_gender)+geom_line(aes(color=gender))
#diving data and creating summaries in a new dataframe
library(dplyr)
pf.fc_by_age_gender <- pf%>%
filter(!is.na(gender))%>%
group_by(age, gender) %>%
summarise(mean_friend_count=mean(friend_count),median_friend_count = median(friend_count),
n=n())%>%
ungroup()%>%
arrange(age)
head(pf.fc_by_age_gender)
ggplot(aes(x=age,y=median_friend_count), data=pf.fc_by_age_gender)+geom_line(aes(color=gender))
install.packages('reshape2',dependencies = T)
library(reshape2)
library(reshape2)
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = "median_friend_count")
head(pf.fc_by_age_gender.wide)
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = "median_friend_count")
head(pf.fc_by_age_gender.wide)
ggplot(aes(x=age, y=female/male),data=pf.fc_by_age_gender.wide)+ geom_line()+
geom_hline(yintercept = 1 , alpha=0.3, type = 2)
pf$year_joined <- floor(2014 - pf$tenure/365)
pf$year_joined <- floor(2014 - pf$tenure/365)
summary(pf$year_joined)
pf$year_joined.bucket <- cut(pf$year_joined, c(2004,2009,2011,2012,2014))
table(pf$year_joined.bucket, useNA = 'ifany')
table(pf$year_joined.bucket, useNA = 'ifany')
ggplot(aes(x=age, y=friend_count),data=subset(pf, !is.na(gender)))+
geom_line(color=year_joined.bucket)
library(ggplot2)
table(pf$year_joined.bucket, useNA = 'ifany')
ggplot(aes(x=age, y=friend_count),data=subset(pf, !is.na(gender)))+
geom_line(aes(color=year_joined.bucket)
table(pf$year_joined.bucket, useNA = 'ifany')
ggplot(aes(x=age, y=friend_count),data=subset(pf, !is.na(gender)))+
geom_line(aes(color=year_joined.bucket))
table(pf$year_joined.bucket, useNA = 'ifany')
ggplot(aes(x=age, y=friend_count),data=subset(pf, !is.na(year_joined.bucket)))+
geom_line(aes(color=year_joined.bucket), stat= 'summary', fun.y=median)
table(pf$year_joined.bucket, useNA = 'ifany')
ggplot(aes(x=age, y=friend_count),data=subset(pf, !is.na(year_joined.bucket)))+
geom_line(aes(color=year_joined.bucket), stat= 'summary', fun.y=mean)+
geom_line(stat='summary', fun.y=mean,linetype=2)
with(subset(pf, tenure >=1), summary(friend_count/tenure))
ggplot(aes(x=tenure, y= friendships_initiated), data=subset(pf, tenure >=1))+
geom_line(aes(color=year_joined.bucket))
ggplot(aes(x=tenure, y= friendships_initiated/tenure), data=subset(pf, tenure >=1))+
geom_line(aes(color=year_joined.bucket))
ggplot(aes(x=tenure, y= friendships_initiated/tenure), data=subset(pf, tenure >=1))+
geom_line(aes(color=year_joined.bucket), stat = 'summary', fun.y=mean)
ggplot(aes(x=tenure, y= friendships_initiated/tenure), data=subset(pf, tenure >=1))+
geom_smooth(aes(color=year_joined.bucket), stat = 'summary', fun.y=mean)
ggplot(aes(x=tenure, y= friendships_initiated/tenure), data=subset(pf, tenure >=1))+
geom_smooth(aes(color=year_joined.bucket))
setwd(c:/users/Howard Ryan/Desktop/Nanodegree/Lesson5)
setwd(c:\users\Howard Ryan\Desktop\Nanodegree\Lesson5)
setwd(C:\users\Howard Ryan\Desktop\Nanodegree\Lesson5)
setwd('C:\users\Howard Ryan\Desktop\Nanodegree\Lesson5')
setwd('C:/users/Howard Ryan/Desktop/Nanodegree/Lesson5')
setwd('C:/users/Howard Ryan/Desktop/Nanodegree/Lesson5')
yo <- read.csv('yogurt.csv')
str(yo)
setwd('C:/users/Howard Ryan/Desktop/Nanodegree/Lesson5')
yo <- read.csv('yogurt.csv')
str(yo)
yo$id <- factor(yo$id)
str(yo)
View(yo)
View(yo)
ggplot(aes(x=price), data=yo)+ geom_histogram()
yo$all_purchases <- yo$strawberry + yo$blueberry + yo$pina.colada +yo$plain + yo$mixed.berry
library(ggplot2)
library(ggplot2)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot()+
stat_summary(fun.y=mean,geom = 'point',shape =4)
ggplot(aes(x=age,y=friend_count),data= subset(pf, !is.na(gender)))+
geom_line(aes(color=gender),stat='summary', fun.y=median)
#diving data and creating summaries in a new dataframe
library(dplyr)
pf.fc_by_age_gender <- pf%>%
filter(!is.na(gender))%>%
group_by(age, gender) %>%
summarise(mean_friend_count=mean(friend_count),median_friend_count = median(friend_count),
n=n())%>%
ungroup()%>%
arrange(age)
head(pf.fc_by_age_gender)
ggplot(aes(x=age,y=median_friend_count), data=pf.fc_by_age_gender)+geom_line(aes(color=gender))
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = "median_friend_count")
head(pf.fc_by_age_gender.wide)
ggplot(aes(x=age, y=female/male),data=pf.fc_by_age_gender.wide)+ geom_line()+
geom_hline(yintercept = 1 , alpha=0.3, type = 2)
pf$year_joined <- floor(2014 - pf$tenure/365)
summary(pf$year_joined)
pf$year_joined.bucket <- cut(pf$year_joined, c(2004,2009,2011,2012,2014))
table(pf$year_joined.bucket, useNA = 'ifany')
ggplot(aes(x=age, y=friend_count),data=subset(pf, !is.na(year_joined.bucket)))+
geom_line(aes(color=year_joined.bucket), stat= 'summary', fun.y=mean)+
geom_line(stat='summary', fun.y=mean,linetype=2)
with(subset(pf, tenure >=1), summary(friend_count/tenure))
ggplot(aes(x=tenure, y= friendships_initiated/tenure), data=subset(pf, tenure >=1))+
geom_smooth(aes(color=year_joined.bucket))
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 30 * round(tenure / 30), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
setwd('C:/users/Howard Ryan/Desktop/Nanodegree/Lesson5')
yo <- read.csv('yogurt.csv')
str(yo)
yo$id <- factor(yo$id)
str(yo)
ggplot(aes(x=price), data=yo)+ geom_histogram()
yo$all_purchases <- yo$strawberry + yo$blueberry + yo$pina.colada +yo$plain + yo$mixed.berry
ggplot(aes(x=all_purchases), data=yo)+ geom_hist()
ggplot(aes(x=all_purchases), data=yo)+ geom_histogram()
ggplot(aes(x=all_purchases), data=yo)+ geom_histogram(binwidth = 1)
ggplot(aes(x=all_purchases), data=yo)+ geom_histogram(binwidth = 1, color='blue')
ggplot(aes(x=all_purchases), data=yo)+ geom_histogram(binwidth = 1, fill='blue')
ggplot(aes(x=all_purchases), data=yo)+ geom_histogram(binwidth = 1, fill='orange')
ggplot(aes(x=time,y=price),data=yo)+
geom_point()
ggplot(aes(x=time,y=price),data=yo)+
geom_jitter()
ggplot(aes(x=time,y=price),data=yo)+
geom_jitter(aplha=1/4, shape=21, fill=I('#007cdc'))
set.seed(4230)
sample.ids <- sample(levels(yo$id), 16)
ggplot(aes(x=time, y=price), data=subset(yo, id %in% sample.ids)) +
facet_wrap(~id)+
geom_line()+
geom_point(aes(size = all_purchases), pch=1)
install.packages(GGally)
install.packages('GGally', dependencies = T)
library(GGally)
library(GGally)
theme_set(theme_minimal(20))
set.seed(1836)
pf_subset <- pf[,c(2,15)]
names(pf_subset)
ggpairs(pf_subste[sample.int(nrow(pf_subset),1000),])
library(GGally)
theme_set(theme_minimal(20))
set.seed(1836)
pf_subset <- pf[,c(2,15)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset),1000),])
library(ggplot2)
data("diamonds")
View(diamond)
View(diamond)
View(diamonds)
View(diamonds)
ggplot(aes(x=price), data=diamonds)+
geom_histogram()+
facet_wrap(diamond$color)
ggplot(aes(x=price), data=diamonds)+
geom_histogram()+
facet_grid(diamond$color)
ggplot(aes(x=price), data=diamonds)+
geom_histogram()+
facet_wrap(diamond$color)
ggplot(aes(x=price), data=diamonds)+
geom_histogram(color=diamonds$cut)+
facet_wrap(diamonds$color)
View(diamonds)
View(diamonds)
ggplot(aes(x=price), data=diamonds)+
geom_histogram(color=cut)+
facet_wrap(diamonds$color)
library(ggplot2)
data("diamonds")
View(diamonds)
View(diamonds)
#price vs weight plt
ggplot(aes(x=carat, y=price), data=diamonds) +
scale_x_continuous(limits = min(diamonds$carat),quantile(diamonds$carat,0.99))+
scale_y_continuous(limits = min(diamonds$price),quantile(diamonds$price,0.99))
#price vs weight plt
ggplot(aes(x=carat, y=price), data=diamonds) +
geom_point()+
scale_x_continuous(limits = min(diamonds$carat),quantile(diamonds$carat,0.99))+
scale_y_continuous(limits = min(diamonds$price),quantile(diamonds$price,0.99))
#price vs weight plt
ggplot(aes(x=carat, y=price), data=diamonds) +
geom_point()+
scale_x_continuous(limits = c(min(diamonds$carat)),quantile(diamonds$carat,0.99))+
scale_y_continuous(limits = c(min(diamonds$price)),quantile(diamonds$price,0.99))
#price vs weight plt
ggplot(diamonds, aes(x=carat, y=price)) +
geom_point(color="orange") +
stat_smooth(method="lm") +
scale_x_continuous(limits=c(min(diamonds$carat), quantile(diamonds$carat, 0.99))) +
scale_y_continuous(trans = log10_trans(), limits=c(min(diamonds$price), quantile(diamonds$price, 0.99))) +
ggtitle('Price (log10) by Carat')
#price vs weight plt
ggplot(diamonds, aes(x=carat, y=price)) +
geom_point(color="orange") +
stat_smooth(method="lm") +
scale_x_continuous(limits=c(min(diamonds$carat), quantile(diamonds$carat, 0.99))) +
scale_y_continuous(limits=c(min(diamonds$price), quantile(diamonds$price, 0.99))) +
ggtitle('Price (log10) by Carat')
# install these if necessary
install.packages('GGally')
install.packages('scales')
install.packages('memisc')
install.packages('lattice')
install.packages('MASS')
install.packages('car')
install.packages('reshape')
install.packages('plyr')
# load the ggplot graphics package and the others
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
# sample 10,000 diamonds from the data set
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
ggpairs(diamond_samp, params = c(shape = I('.'), outlier.shape = I('.')))
install.packages("scales")
install.packages("plyr")
setwd('c:/users/howard ryan/desktop/nanodegree/projec')
setwd('c:/users/howard ryan/desktop/nanodegree/project')
library(ggplot2)
# Load the Data
red_wine <- read.csv('wineQualityReds.csv')
View(red_wine)
View(red_wine)
str(red_wine)
summary(red_wine)
head(red_wine)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
#investigating variables correlations overview
ggpairs(red_wine,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
#investigating univariateplots
qplot(data = red_wine, x=quality)
#investigating univariateplots
quality <- qplot(data = red_wine, x=quality)
alcohol <- qplot(data = red_wine, x=alcohol)
grid(quality,alcohol,ncol=3)
#investigating univariateplots
quality <- qplot(data = red_wine, x=quality)
alcohol <- qplot(data = red_wine, x=alcohol)
grid(quality,alcohol,ncol=2)
#investigating univariateplots
quality <- qplot(data = red_wine, x=quality)
alcohol <- qplot(data = red_wine, x=alcohol)
grid(quality,alcohol)
#investigating univariateplots
p1 <- qplot(data = red_wine, x=quality)
p2 <- qplot(data = red_wine, x=alcohol)
grid(p1,p2)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
library(grid)
library(gridExtra)
#investigating univariateplots
p1 <- qplot(data = red_wine, x=quality)
p2 <- qplot(data = red_wine, x=alcohol)
grid.arrange(p1,p2)
#investigating univariateplots
p1 <- qplot(data = red_wine, x=quality)
p2 <- qplot(data = red_wine, x=alcohol)
p3 <- qplot(data = red_wine, x=sulphates)
p4 <- qplot(data = red_wine, x=pH)
p5 <- qplot(data = red_wine, x=density)
p6 <- qplot(data = red_wine, x=total.sulfur.dioxide)
p7 <- qplot(data = red_wine, x=free.sulfur.dioxide)
p8 <- qplot(data = red_wine, x=chlorides)
p9 <- qplot(data = red_wine, x=residual.sugar)
p10 <- qplot(data = red_wine, x=citric.acid)
p11 <- qplot(data = red_wine, x=volatile.acidity )
p12 <- qplot(data = red_wine, x=fixed.acidity )
grid.arrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,ncol=3)
#investigating relation between all variables
ggpairs(red_wine,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
